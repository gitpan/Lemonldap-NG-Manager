## @file
# Messages translation for Lemonldap::NG::Manager

## @class
# Messages translation for Lemonldap::NG::Manager.
package Lemonldap::NG::Manager::_i18n;

# Developer warning : this file must be utf8 encoded

use strict;
use AutoLoader qw(AUTOLOAD);
our $VERSION = '1.4.0';

## @method string translate(string text,string lang)
# Returns $text translated in $lang.
#@param $text textId
#@param $lang Optional language string. If not set, uses Accept-Language
# HTTP header.
sub translate {
    my ( $self, $text, $lang ) = @_;
    return $text unless ( $text =~ /[a-z]/ );
    $lang ||= $ENV{HTTP_ACCEPT_LANGUAGE};
    $lang = lc($lang);
    $lang =~ s/-/_/g;
    foreach ( split( /[,;]/, $lang ), 'en' ) {
        next if /=/;
        if ( __PACKAGE__->can($_) ) {
            no strict 'refs';
            my $r = &$_()->{$text};
            if ($r) {
                return $r;
            }
            else {
                $self->lmLog( __PACKAGE__ . ": $text not translated in $_",
                    'error' );
                return $text;
            }
        }
    }
}

*fr_fr = *fr;
*en_us = *en;

1;

__END__

sub en {
    return {
        _auth                    => 'Authentication',
        _authChoice              => 'Authentication choice',
        _userDB                  => 'User',
        _passwordDB              => 'Password',
        _issuerDB                => 'Issuer',
        _timezone                => 'Time zone',
        _session_id              => 'Session identifier',
        _url                     => 'Origin URL',
        _user                    => 'Login',
        _password                => 'Password',
        _utime                   => 'Session timestamp',
        _lastAuthnUTime          => 'Authentication timestamp',
        _idp                     => 'IDP EntityID',
        _idpConfKey              => 'IDP configuration key',
        _samlToken               => 'SAML token',
        _lassoSessionDump        => 'Lasso session dump',
        _lassoIdentityDump       => 'Lasso identity dump',
        advancedParams           => 'Advanced parameters',
        apacheParams             => 'Apache parameters',
        apacheAuthnLevel         => 'Authentication level',
        applicationList          => 'Categories and applications',
        attributesAndMacros      => 'Attributes and macros',
        authChoiceModules        => 'Allowed modules',
        authChoiceParam          => 'URL parameter',
        authentication           => 'Authentication module',
        authenticationLevel      => 'Authentication level',
        authenticationTitle      => 'Authentication',
        AuthLDAPFilter           => 'Authentication filter',
        authParams               => 'Authentication modules',
        browserIdAuthnLevel      => 'Authentication level',
        browserIdAutoLogin       => 'Automatic login',
        browserIdBackgroundColor => 'Background color',
        browserIdParams          => 'BrowserIDParams',
        browserIdSiteLogo        => 'Site Logo',
        browserIdSiteName        => 'Site name',
        browserIdVerificationURL => 'Verification URL',
        dbiAuthChain             => 'Chain',
        dbiAuthLoginCol          => 'Login field name',
        dbiAuthnLevel            => 'Authentication level',
        dbiAuthPassword          => 'Password',
        dbiAuthPasswordCol       => 'Password field name',
        dbiAuthPasswordHash      => 'Hash scheme',
        dbiAuthTable             => 'Authentication table',
        dbiAuthUser              => 'User',
        dbiConnection            => 'Connection',
        dbiConnectionAuth        => 'Authentication process',
        dbiConnectionUser        => 'User process',
        dbiExportedVars          => 'Exported variables',
        dbiParams                => 'DBI parameters',
        dbiPassword              => 'Password',
        dbiPasswordMailCol       => 'Mail field name',
        dbiSchema                => 'Schema',
        dbiUserChain             => 'Chain',
        dbiUserPassword          => 'Password',
        dbiUserTable             => 'User table',
        dbiUserUser              => 'User',
        deleteNotification       => 'Mark notification as done',
        deleteSession            => 'Delete session',
        demoExportedVars         => 'Exported variables',
        demoParams               => 'Demonstration parameters',
        done                     => 'done',
        captcha_login_enabled    => 'Activation in login form',
        captcha_mail_enabled     => 'Activation in password reset by mail form',
        captcha_register_enabled => 'Activation in register form',
        captcha_size             => 'Size',
        captchaStorage           => 'Captcha module name',
        captchaStorageOptions    => 'Captcha module options',
        CAS_authnLevel           => 'Authentication level',
        CAS_CAFile               => 'CA file',
        CAS_gateway              => 'Gateway authentication',
        CAS_pgtFile              => 'PGT file',
        CAS_proxiedServices      => 'Proxied services',
        CAS_renew                => 'Renew authentication',
        CAS_url                  => 'Server URL',
        casAccessControlPolicy   => 'Access control policy',
        casAttr                  => 'CAS login',
        casParams                => 'CAS parameters',
        casStorage               => 'CAS sessions module name',
        casStorageOptions        => 'CAS sessions module options',
        cda                      => 'Multiple domains',
        checkXSS                 => 'Check XSS attacks',
        clickHereToForce         => 'Click here to force',
        choiceParams             => 'Choice parameters',
        Configuration            => 'Configuration',
        confModuledeprecated =>
'This module has been deprecated, set "forceUpload=1" in lemonldap-ng.ini to use it',
        confSaved                       => 'Configuration saved',
        confWasChanged                  => 'Configuration has been changed',
        connectionTitle                 => 'Connection',
        cookieExpiration                => 'Cookie expiration time',
        cookieName                      => 'Cookie Name',
        cookieParams                    => 'Cookies',
        customFunctions                 => 'Custom functions',
        databaseLocked                  => 'Database locked by another process',
        dateTitle                       => 'Dates',
        dn                              => 'DN',
        domain                          => 'Domain',
        error                           => 'Error',
        exportedAttr                    => 'SOAP exported attributes',
        exportedVars                    => 'Exported Variables',
        facebookAppId                   => 'Facebook application ID',
        facebookAppSecret               => 'Facebook application secret',
        facebookAuthnLevel              => 'Authentication level',
        facebookExportedVars            => 'Exported variables',
        facebookParams                  => 'Facebook parameters',
        failedLoginNumber               => 'Number of registered failed logins',
        generalParameters               => 'General Parameters',
        globalStorage                   => 'Apache::Session module',
        globalStorageOptions            => 'Apache::Session module parameters',
        googleAuthnLevel                => 'Authentication level',
        googleExportedVars              => 'Exported variables',
        googleParams                    => 'Google parameters',
        grantSessionRules               => 'Opening conditions',
        groups                          => 'Groups',
        headers                         => 'HTTP Headers',
        hideOldPassword                 => 'Hide old password',
        httpOnly                        => 'Javascript protection',
        https                           => 'HTTPS',
        internalReference               => 'Internal reference',
        ipAddr                          => 'IP address',
        issuerParams                    => 'Issuer modules',
        issuerDBSAML                    => 'SAML',
        issuerDBSAMLActivation          => 'Activation',
        issuerDBSAMLPath                => 'Path',
        issuerDBSAMLRule                => 'Use rule',
        issuerDBCAS                     => 'CAS',
        issuerDBCASActivation           => 'Activation',
        issuerDBCASPath                 => 'Path',
        issuerDBCASRule                 => 'Use rule',
        issuerDBCASOptions              => 'Options',
        issuerDBOpenID                  => 'OpenID',
        issuerDBOpenIDActivation        => 'Activation',
        issuerDBOpenIDPath              => 'Path',
        issuerDBOpenIDRule              => 'Use rule',
        issuerDBOpenIDOptions           => 'Options',
        jsRedirect                      => 'Redirection message',
        key                             => 'Encryption key',
        ldap                            => 'LDAP',
        ldapAuthnLevel                  => 'Authentication level',
        ldapBase                        => 'Users search base',
        ldapChangePasswordAsUser        => 'Change as user',
        ldapConnection                  => 'Connection',
        ldapExportedVars                => 'Exported variables',
        ldapFilters                     => 'Filters',
        LDAPFilter                      => 'Default filter',
        ldapGroupAttributeName          => 'Target attribute',
        ldapGroupAttributeNameGroup     => 'Group source attribute',
        ldapGroupAttributeNameSearch    => 'Searched attributes',
        ldapGroupAttributeNameUser      => 'User source attribute',
        ldapGroupBase                   => 'Search base',
        ldapGroupObjectClass            => 'Object class',
        ldapGroupRecursive              => 'Recursive',
        ldapGroups                      => 'Groups',
        ldapParams                      => 'LDAP parameters',
        ldapPassword                    => 'Password',
        ldapPasswordResetAttribute      => 'Reset attribute',
        ldapPasswordResetAttributeValue => 'Reset value',
        ldapPpolicyControl              => 'Password policy control',
        ldapPort                        => 'Server port',
        ldapPwdEnc                      => 'LDAP password encoding',
        ldapRaw                         => 'Binary attributes',
        ldapServer                      => 'Server host',
        ldapSetPassword                 => 'Password modify extended operation',
        ldapTimeout                     => 'Timeout',
        ldapUsePasswordResetAttribute   => 'Use reset attribute',
        ldapVersion                     => 'Version',
        localSessionStorage             => 'Cache module',
        localSessionStorageOptions      => 'Cache module options',
        loginHistory                    => 'Login history',
        loginHistoryEnabled             => 'Activation',
        logoutServices                  => 'Logout forward',
        logParams                       => 'Logs',
        macros                          => 'Macros',
        mailBody                        => 'Success mail content',
        mailCharset                     => 'Charset',
        mailConfirmBody                 => 'Confirmation mail content',
        mailConfirmSubject              => 'Confirmation mail subject',
        mailContent                     => 'Mail content',
        mailFrom                        => 'Mail sender',
        mailHeaders                     => 'Mail headers',
        mailLDAPFilter                  => 'Mail filter',
        mailOnPasswordChange   => 'Send a mail when password is changed',
        mailOther              => 'Other',
        mailReplyTo            => 'Reply address',
        mailSessionKey         => 'Session key containing mail address',
        mailSubject            => 'Success mail subject',
        mailTimeout            => 'Validity time of a password reset request',
        mailUrl                => 'Page URL',
        maintenance            => 'Maintenance mode',
        managerDn              => 'Account',
        managerPassword        => 'Password',
        memberOfSSOGroups      => 'Member of SSO groups',
        modulesTitle           => 'Used modules',
        multipleSessions       => 'Multiple sessions',
        notification           => 'Activation',
        notifications          => 'Notifications',
        notificationCreated    => 'Notification has been created',
        notificationDeleted    => 'Notification has been marked as done',
        notificationDone       => 'notification done',
        notificationsDone      => 'notifications done',
        notificationNotCreated => 'The notification was not created',
        notificationNotDeleted => 'The notification was not marked as done',
        notificationNotFound   => 'The notification was not found',
        notificationNotPurged  => 'The notification was not definitely removed',
        notificationPurged     => 'Notification has been definitely removed',
        notificationStorage    => 'Storage module',
        notificationStorageOptions  => 'Storage module parameters',
        notificationWildcard        => 'Wildcard for all users',
        notificationXSLTfile        => 'Custom XSLT file',
        notifyDeleted               => 'Display deleted sessions',
        notifyOther                 => 'Display other sessions',
        nullAuthnLevel              => 'Authentication level',
        nullParams                  => 'Null parameters',
        openIdAttr                  => 'OpenID login',
        openIdAuthnLevel            => 'Authentication level',
        openIdExportedVars          => 'Exported variables',
        openIdIDPList               => 'Authorizated domains',
        openIdIssuerSecret          => 'Secret token',
        openIdParams                => 'OpenID parameters',
        openIdSecret                => 'Secret token',
        openIdSreg                  => 'SREG mapping',
        openIdSreg_fullname         => 'Full name',
        openIdSreg_nickname         => 'Nick name',
        openIdSreg_language         => 'Language',
        openIdSreg_postcode         => 'Postal code',
        openIdSreg_timezone         => 'Timezone',
        openIdSreg_country          => 'Country',
        openIdSreg_gender           => 'Gender',
        openIdSreg_email            => 'Email',
        openIdSreg_dob              => 'Date of birth',
        openIdSPList                => 'Authorizated domains',
        passwordDB                  => 'Password module',
        passwordManagement          => 'Password management',
        persistentSessions          => 'Persistent sessions',
        persistentStorage           => 'Apache::Session module',
        persistentStorageOptions    => 'Apache::Session module parameters',
        port                        => 'Port',
        portal                      => 'URL',
        portalAntiFrame             => 'Anti frame protection',
        portalAutocomplete          => 'Auto complete',
        portalButtons               => 'Buttons on login page',
        portalCaptcha               => 'Captcha',
        portalCheckLogins           => 'Check last logins',
        portalCustomization         => 'Customization',
        portalDisplayAppslist       => 'Applications list',
        portalDisplayChangePassword => 'Password change',
        portalDisplayLoginHistory   => 'Login History',
        portalDisplayLogout         => 'Logout',
        portalDisplayRegister       => 'Register new account',
        portalDisplayResetPassword  => 'Reset password',
        portalForceAuthn            => 'Force authentication',
        portalMenu                  => 'Menu',
        portalModules               => 'Modules activation',
        portalOpenLinkInNewWindow   => 'New window',
        portalOther                 => 'Other',
        portalParams                => 'Portal',
        portalPingInterval          => 'Ping Interval',
        portalRedirection           => 'Portal redirections',
        portalRequireOldPassword    => 'Require old password',
        portalSkin                  => 'Default Skin',
        portalSkinRules             => 'Skin display rules',
        portalUserAttr              => 'User attribute',
        post                        => 'Form replay',
        proxyParams                 => 'Proxy parameters',
        purgeNotification           => 'Delete notification definitely',
        radiusAuthnLevel            => 'Authentication level',
        radiusParams                => 'Radius parameters',
        radiusSecret                => 'Shared secret',
        radiusServer                => 'Server hostname',
        randomPasswordRegexp        => 'Regexp for password generation',
        redirection                 => 'Handler redirections',
        register                    => 'Register new account',
        registerConfirmSubject      => 'Subject for confirmation mail',
        registerDB                  => 'Module',
        registerDoneSubject         => 'Subject for done mail',
        registerTimeout             => 'Validity time of a register request',
        registerUrl                 => 'Page URL',
        reloadUrls                  => 'Configuration reload',
        remoteCookieName            => 'Cookie name',
        remoteGlobalStorage         => 'Sessions module',
        remoteGlobalStorageOptions  => 'Sessions module options',
        remoteParams                => 'Remote parameters',
        remotePortal                => 'Portal URL',
        rules                       => 'Rules',
        securedCookie               => 'Secured Cookie (SSL)',
        secureTokenAllowOnError     => 'Allow requests in error',
        secureTokenAttribute        => 'Attribute to store',
        secureTokenExpiration       => 'Token expiration',
        secureTokenHandler          => 'Secure Token',
        secureTokenHeader           => 'Header name',
        secureTokenMemcachedServers => 'Memcached servers',
        secureTokenUrls             => 'Protected URLs',
        security                    => 'Security',
        session                     => 'session',
        sessions                    => 'sessions',
        sessionDataToRemember       => 'Session data to store',
        sessionDeleted              => 'The session was deleted',
        sessionParams               => 'Sessions',
        sessionStartedAt            => 'Session started on',
        sessionStorage              => 'Sessions Storage',
        sessionTitle                => 'Session content',
        singleIP                    => 'One IP only by user',
        singleSession               => 'One session only by user',
        singleUserByIP              => 'One user by IP address',
        slaveAuthnLevel             => 'Authentication level',
        slaveExportedVars           => 'Exported variables',
        slaveMasterIP               => 'Master\'s IP address',
        slaveParams                 => 'Slave parameters',
        slaveUserHeader             => "Header for user login",
        SMTPAuthPass                => 'SMTP password',
        SMTPAuthUser                => 'SMTP user',
        SMTPServer                  => 'SMTP server',
        soap                        => 'SOAP',
        Soap                        => 'Activation',
        soapAuthService             => 'Portal URL',
        soapSessionService          => 'SOAP sessions end point',
        specialHandlers             => 'Special Handlers',
        SSLAuthnLevel               => 'Authentication level',
        sslParams                   => 'SSL parameters',
        SSLVar                      => 'Extracted certificate field',
        startTime                   => 'Creation date',
        storePassword               => 'Store user password in session datas',
        successLoginNumber          => 'Number of registered logins',
        sympaHandler                => 'Sympa',
        sympaMailKey                => 'Mail session key',
        sympaSecret                 => 'Shared secret',
        syntaxError                 => 'Syntax Error',
        syslog                      => 'Syslog facility',
        timeout                     => 'Sessions timeout',
        timeoutActivity             => 'Sessions activity timeout',
        trustedDomains              => 'Trusted domains',
        trustedProxies              => 'Trusted proxies IP',
        twitterAppName              => 'Application name',
        twitterAuthnLevel           => 'Authentication level',
        twitterKey                  => 'API key',
        twitterParams               => 'Twitter parameters',
        twitterSecret               => 'API secret',
        unknownError                => 'Unknown error',
        updateTime                  => 'Update date',
        uploadDenied                => 'Upload denied',
        user                        => 'user',
        users                       => 'users',
        userDB                      => 'Users module',
        userControl                 => 'Username control',
        userPivot                   => 'Login field name in user table',
        useRedirectOnError          => 'Redirect on error',
        useRedirectOnForbidden      => 'Redirect on forbidden',
        useSafeJail                 => 'Use Safe jail',
        variables                   => "Variables",
        vhostAliases                => 'Aliases',
        vhostHttps                  => 'HTTPS',
        vhostMaintenance            => 'Maintenance mode',
        vhostOptions                => 'Options',
        vhostPort                   => 'Port',
        virtualHosts                => 'Virtual Hosts',
        warning                     => 'Warning',
        webIDAuthnLevel             => 'Authentication level',
        webIDExportedVars           => 'Exported variables',
        webIDParams                 => 'WebID parameters',
        webIDWhitelist              => 'WebID whitelist',
        whatToTrace                 => "REMOTE_USER",
        yubikeyAuthnLevel           => 'Authentication level',
        yubikeyClientID             => 'API client ID',
        yubikeyParams               => 'Yubikey parameters',
        yubikeyPublicIDSize         => 'OTP public ID part size',
        yubikeySecretKey            => 'API secret key',
        zimbraAccountKey            => 'Account session key',
        zimbraBy                    => 'Account type',
        zimbraHandler               => 'Zimbra',
        zimbraPreAuthKey            => 'Preauthentication key',
        zimbraSsoUrl                => 'Local SSO URL pattern',
        zimbraUrl                   => 'Preauthentication URL',

        saml                               => 'SAML',
        samlNameIDFormatMap                => 'NameID formats',
        samlNameIDFormatMapEmail           => 'Email',
        samlNameIDFormatMapX509            => 'X509',
        samlNameIDFormatMapWindows         => 'Windows',
        samlNameIDFormatMapKerberos        => 'Kerberos',
        samlIDPMetaDataNode                => 'SAML identity providers',
        samlIDPMetaDataXML                 => 'Metadata',
        samlIDPMetaDataExportedAttributes  => 'Exported attributes',
        samlIDPMetaDataOptions             => 'Options',
        samlIDPMetaDataOptionsNameIDFormat => 'NameID format',
        samlIDPMetaDataOptionsForceAuthn   => 'Force authentication',
        samlIDPMetaDataOptionsIsPassive    => 'Passive authentication',
        samlIDPMetaDataOptionsAllowProxiedAuthn =>
          'Allow proxied authentication',
        samlIDPMetaDataOptionsAllowLoginFromIDP => 'Allow login from IDP',
        samlIDPMetaDataOptionsAdaptSessionUtime => 'Adapt session lifetime',
        samlIDPMetaDataOptionsSignSSOMessage    => 'Sign SSO message',
        samlIDPMetaDataOptionsCheckSSOMessageSignature =>
          'Check SSO message signature',
        samlIDPMetaDataOptionsSignSLOMessage => 'Sign SLO message',
        samlIDPMetaDataOptionsCheckSLOMessageSignature =>
          'Check SLO message signature',
        samlIDPMetaDataOptionsSSOBinding     => 'SSO binding',
        samlIDPMetaDataOptionsSLOBinding     => 'SLO binding',
        samlIDPMetaDataOptionsResolutionRule => 'Resolution rule',
        samlIDPMetaDataOptionsRequestedAuthnContext =>
          'Requested authentication context',
        samlIDPMetaDataOptionsForceUTF8       => 'Force UTF-8',
        samlIDPMetaDataOptionsEncryptionMode  => 'Encryption mode',
        samlIDPMetaDataOptionsCheckConditions => 'Check conditions',
        samlIDPMetaDataOptionsAuthnRequest    => 'Authentication request',
        samlIDPMetaDataOptionsSession         => 'Session',
        samlIDPMetaDataOptionsSignature       => 'Signature',
        samlIDPMetaDataOptionsBinding         => 'Binding',
        samlIDPMetaDataOptionsSecurity        => 'Security',
        samlSPMetaDataNode                    => 'SAML service providers',
        samlSPMetaDataXML                     => 'Metadata',
        samlSPMetaDataExportedAttributes      => 'Exported attributes',
        samlSPMetaDataOptions                 => 'Options',
        samlSPMetaDataOptionsNameIDFormat     => 'Default NameID format',
        samlSPMetaDataOptionsOneTimeUse       => 'One time use',
        samlSPMetaDataOptionsSignSSOMessage   => 'Sign SSO message',
        samlSPMetaDataOptionsCheckSSOMessageSignature =>
          'Check SSO message signature',
        samlSPMetaDataOptionsSignSLOMessage => 'Sign SLO message',
        samlSPMetaDataOptionsCheckSLOMessageSignature =>
          'Check SLO message signature',
        samlSPMetaDataOptionsEncryptionMode => 'Encryption mode',
        samlSPMetaDataOptionsAuthnResponse  => 'Authentication response',
        samlSPMetaDataOptionsSignature      => 'Signature',
        samlSPMetaDataOptionsSecurity       => 'Security',
        samlSPMetaDataOptionsEnableIDPInitiatedURL =>
          'Enable use of IDP initiated URL',
        samlSPMetaDataOptionsNameIDSessionKey => 'Force NameID session key',
        samlSPMetaDataOptionsSessionNotOnOrAfterTimeout =>
          'sessionNotOnOrAfter duration',
        samlSPMetaDataOptionsNotOnOrAfterTimeout => 'notOnOrAfter duration',
        samlServiceMetaData                      => 'SAML 2 Service',
        samlEntityID                             => 'Entity Identifier',
        samlOrganization                         => 'Organization',
        samlOrganizationDisplayName              => 'Display Name',
        samlOrganizationName                     => 'Name',
        samlOrganizationURL                      => 'URL',
        samlSPSSODescriptor                      => 'Service Provider',
        samlSPSSODescriptorAuthnRequestsSigned =>
          'Signed Authentication Request',
        samlSPSSODescriptorWantAssertionsSigned => 'Want Assertions Signed',
        samlSPSSODescriptorSingleLogoutService  => 'Single Logout',
        samlSPSSODescriptorSingleLogoutServiceHTTPRedirect => 'HTTP Redirect',
        samlSPSSODescriptorSingleLogoutServiceHTTPPost     => 'HTTP POST',
        samlSPSSODescriptorSingleLogoutServiceSOAP         => 'SOAP',
        samlSPSSODescriptorAssertionConsumerService => 'Assertion Consumer',
        samlSPSSODescriptorAssertionConsumerServiceHTTPArtifact =>
          'HTTP Artifact',
        samlSPSSODescriptorAssertionConsumerServiceHTTPPost => 'HTTP POST',
        samlSPSSODescriptorArtifactResolutionService => 'Artifact Resolution',
        samlSPSSODescriptorArtifactResolutionServiceArtifact =>
          'Artifact Service',
        samlIDPSSODescriptor => 'Identity Provider',
        samlIDPSSODescriptorWantAuthnRequestsSigned =>
          'Want Authentication Request Signed',
        samlIDPSSODescriptorSingleSignOnService             => 'Single Sign On',
        samlIDPSSODescriptorSingleSignOnServiceHTTPRedirect => 'HTTP Redirect',
        samlIDPSSODescriptorSingleSignOnServiceHTTPPost     => 'HTTP POST',
        samlIDPSSODescriptorSingleSignOnServiceHTTPArtifact => 'HTTP Artifact',
        samlIDPSSODescriptorSingleSignOnServiceSOAP         => 'SOAP',
        samlIDPSSODescriptorSingleLogoutService             => 'Single Logout',
        samlIDPSSODescriptorSingleLogoutServiceHTTPRedirect => 'HTTP Redirect',
        samlIDPSSODescriptorSingleLogoutServiceHTTPPost     => 'HTTP POST',
        samlIDPSSODescriptorSingleLogoutServiceSOAP         => 'SOAP',
        samlIDPSSODescriptorArtifactResolutionService => 'Artifact Resolution',
        samlIDPSSODescriptorArtifactResolutionServiceArtifact =>
          'Artifact Service',
        samlAttributeAuthorityDescriptor => 'Attribute Authority',
        samlAttributeAuthorityDescriptorAttributeService => 'Attribute Service',
        samlAttributeAuthorityDescriptorAttributeServiceSOAP => 'SOAP',
        samlServiceSecurity         => 'Security parameters',
        samlServiceSecuritySig      => 'Signature',
        samlServiceSecurityEnc      => 'Encryption',
        samlServicePrivateKeySig    => 'Private key',
        samlServicePrivateKeySigPwd => 'Private key password',
        samlServicePublicKeySig     => 'Public key',
        samlServicePrivateKeyEnc    => 'Private key',
        samlServicePrivateKeyEncPwd => 'Private key password',
        samlServicePublicKeyEnc     => 'Public key',
        samlAdvanced                => 'Advanced',
        samlIdPResolveCookie        => 'IDP resolution cookie name',
        samlMetadataForceUTF8       => 'UTF8 metadata conversion',
        samlStorage                 => 'SAML sessions module name',
        samlStorageOptions          => 'SAML sessions module options',
        samlAuthnContextMap         => 'Authentication contexts',
        samlAuthnContextMapPassword => 'Password',
        samlAuthnContextMapPasswordProtectedTransport =>
          'Password protected transport',
        samlAuthnContextMapTLSClient     => 'TLS client',
        samlAuthnContextMapKerberos      => 'Kerberos',
        samlCommonDomainCookie           => 'Common Domain Cookie',
        samlCommonDomainCookieActivation => 'Activation',
        samlCommonDomainCookieDomain     => 'Common domain',
        samlCommonDomainCookieReader     => 'Reader URL',
        samlCommonDomainCookieWriter     => 'Writer URL',
        samlRelayStateTimeout            => 'RelayState session timeout',
        samlUseQueryStringSpecific       => 'Use specific query_string method',
    };
}

sub fr {
    use utf8;
    return {
        _auth                    => 'Authentification',
        _authChoice              => 'Choix d\'authentification',
        _userDB                  => 'Utilisateur',
        _passwordDB              => 'Mot de passe',
        _issuerDB                => 'Fournisseur',
        _timezone                => 'Zone horaire',
        _session_id              => 'Identifiant de session',
        _url                     => "URL d'origine",
        _user                    => 'Identifiant',
        _password                => 'Mot de passe',
        _utime                   => 'Tampon de la session',
        _lastAuthnUTime          => 'Tampon d\'authentification ',
        _idp                     => 'Identifiant d\'entité de l\'IDP',
        _idpConfKey              => 'Clé de configuration de l\'IDP',
        _samlToken               => ' Jeton SAML ',
        _lassoSessionDump        => ' Dump session Lasso ',
        _lassoIdentityDump       => 'Dump identité Lasso',
        advancedParams           => 'Paramètres avancés',
        apacheParams             => 'Paramètres Apache',
        apacheAuthnLevel         => 'Niveau d\'authentification',
        applicationList          => 'Catégories et applications',
        attributesAndMacros      => 'Attributs et macros',
        authChoiceModules        => 'Modules autorisés',
        authChoiceParam          => 'Parmètre de l\'URL',
        authentication           => "Module d'authentification",
        authenticationLevel      => 'Niveau d\'authentification',
        authenticationTitle      => 'Authentification',
        AuthLDAPFilter           => 'Filtre d\'authentification',
        authParams               => "Modules d'authentification",
        browserIdAuthnLevel      => "Niveau d'authentification",
        browserIdAutoLogin       => "Authentification automatique",
        browserIdBackgroundColor => "Couleur d'arrière plan",
        browserIdParams          => "Paramètres BrowserID",
        browserIdSiteLogo        => "Logo du site",
        browserIdSiteName        => "Nom du site",
        browserIdVerificationURL => "Adresse de vérification",
        dbiAuthChain             => 'Chaîne',
        dbiAuthLoginCol          => 'Champ identifiant',
        dbiAuthnLevel            => 'Niveau d\'authentification',
        dbiAuthPassword          => 'Mot de passe',
        dbiAuthPasswordCol       => 'Champ mot de passe',
        dbiAuthPasswordHash      => 'Schéma de hachage',
        dbiAuthTable             => 'Table authentification',
        dbiAuthUser              => 'Utilisateur',
        dbiConnection            => 'Connexion',
        dbiConnectionAuth        => 'Authentification',
        dbiConnectionUser        => 'Utilisateurs',
        dbiExportedVars          => 'Variables exportées',
        dbiParams                => 'Paramètres DBI',
        dbiPassword              => 'Mot de passe',
        dbiPasswordMailCol       => 'Champ mail',
        dbiSchema                => 'Schéma',
        dbiUserChain             => 'Chaîne',
        dbiUserPassword          => 'Mot de passe',
        dbiUserTable             => 'Table des utilisateurs',
        dbiUserUser              => 'Utilisateur',
        deleteNotification       => 'Marquer la notification comme validée',
        deleteSession            => 'Effacer la session',
        demoExportedVars         => 'Variables exportées',
        demoParams               => 'Paramètres démonstration',
        done                     => 'validée',
        captcha_login_enabled =>
          "Activation dans le formulaire d'authentification",
        captcha_mail_enabled =>
          'Activation dans le formulaire de réinitialisation par mail',
        captcha_register_enabled =>
          'Activation dans le formulaire de création de compte',
        captcha_size           => 'Taille',
        captchaStorage         => 'Nom du module de stockage',
        captchaStorageOptions  => 'Options du module de stockage',
        CAS_authnLevel         => 'Niveau d\'authentification',
        CAS_CAFile             => 'Fichier d\'AC',
        CAS_gateway            => 'Authentification transparente',
        CAS_pgtFile            => 'Fichier de PGT',
        CAS_renew              => 'Renouveller l\'authentication',
        CAS_proxiedServices    => 'Services mandatés',
        CAS_url                => 'URL du serveur',
        casAccessControlPolicy => "Politique de contrôle d'accès",
        casAttr                => 'Identifiant CAS',
        casParams              => 'Paramètres CAS',
        casStorage             => 'Nom du module des session CAS',
        casStorageOptions      => 'Options du module des sessions CAS',
        cda                    => 'Domaines multiples',
        checkXSS               => 'Contrôler les attaques XSS',
        clickHereToForce       => 'Cliquer ici pour forcer',
        choiceParams           => 'Paramètres des choix',
        Configuration          => 'Configuration',
        confModuledeprecated =>
"Ce module est obsolète, indiquez \"forceUpload=1\" dans le fichier lemonldap-ng.ini pour l'utiliser",
        confSaved        => 'Configuration sauvegardée',
        confWasChanged   => 'Configuration modifiée entre-temps',
        connectionTitle  => 'Connexion',
        cookieExpiration => 'Durée de vie du cookie',
        cookieName       => 'Nom du cookie',
        cookieParams     => 'Cookies',
        customFunctions  => 'Fonctions personnalisées',
        databaseLocked => 'Base de donnée verrouillée par un autre processus',
        dateTitle      => 'Dates',
        dn             => 'DN',
        domain         => 'Domaine',
        error          => 'Erreur',
        exportedAttr   => 'Attributs exportés par le portail (SOAP)',
        exportedVars   => 'Attributs à exporter',
        facebookAppId  => 'ID de l\'application Facebook',
        facebookAppSecret      => 'Secret de l\'application Facebook',
        facebookExportedVars   => 'Variables exportées',
        facebookAuthnLevel     => 'Niveau d\'authentification',
        facebookParams         => 'Paramètres Facebook',
        failedLoginNumber      => 'Nombre d\'échecs de connexion mémorisés',
        generalParameters      => 'Paramètres généraux',
        globalStorage          => 'Module Apache::Session',
        globalStorageOptions   => 'Paramètres du module Apache::Session',
        googleAuthnLevel       => 'Niveau d\'authentification',
        googleExportedVars     => 'Variables exportées',
        googleParams           => 'Paramètres Google',
        grantSessionRules      => "Conditions d'ouverture",
        groups                 => 'Groupes',
        headers                => 'En-têtes HTTP',
        hideOldPassword        => "Masquer l'ancien mot de passe",
        httpOnly               => 'Protection contre javascript',
        https                  => 'HTTPS',
        internalReference      => 'Référence interne ',
        ipAddr                 => 'Adresse IP',
        issuerParams           => 'Modules fournisseur',
        issuerDBSAML           => 'SAML',
        issuerDBSAMLActivation => 'Activation',
        issuerDBSAMLPath       => 'Chemin',
        issuerDBSAMLRule       => 'Règle d\'utilisation',
        issuerDBCAS            => 'CAS',
        issuerDBCASActivation  => 'Activation',
        issuerDBCASPath        => 'Chemin',
        issuerDBCASRule        => 'Règle d\'utilisation',
        issuerDBCASOptions     => 'Options',
        issuerDBOpenID         => 'OpenID',
        issuerDBOpenIDActivation        => 'Activation',
        issuerDBOpenIDPath              => 'Chemin',
        issuerDBOpenIDRule              => 'Règle d\'utilisation',
        issuerDBOpenIDOptions           => 'Options',
        jsRedirect                      => 'Message de redirection',
        key                             => 'Clef de chiffrement',
        ldap                            => 'LDAP',
        ldapAuthnLevel                  => 'Niveau d\'authentification',
        ldapBase                        => 'Base de recherche des utilisateurs',
        ldapChangePasswordAsUser        => 'Changement en tant qu\'utilisateur',
        ldapConnection                  => 'Connexion',
        ldapExportedVars                => 'Variables exportées',
        ldapFilters                     => 'Filtres',
        LDAPFilter                      => 'Filtre par défaut',
        ldapGroupAttributeName          => 'Attribut cible',
        ldapGroupAttributeNameGroup     => 'Attribut source groupe',
        ldapGroupAttributeNameSearch    => 'Attributs recherchés',
        ldapGroupAttributeNameUser      => 'Attribut source utilisateur',
        ldapGroupBase                   => 'Base de recherche',
        ldapGroupObjectClass            => 'Classe d\'objet',
        ldapGroupRecursive              => 'Récursif',
        ldapGroups                      => 'Groupes',
        ldapParams                      => 'Paramètres LDAP',
        ldapPassword                    => 'Mot de passe',
        ldapPasswordResetAttribute      => 'Attribut de réinitialisation',
        ldapPasswordResetAttributeValue => 'Valeur de réinitialisation',
        ldapPpolicyControl              => 'Contrôle password policy',
        ldapPort                        => 'Port',
        ldapPwdEnc                      => 'Encodage des mots de passe LDAP',
        ldapRaw                         => 'Attributs binaires',
        ldapServer                      => 'Hôte',
        ldapSetPassword => 'Opération étendue password modify',
        ldapTimeout     => 'Temps maximum d\'inactivité',
        ldapUsePasswordResetAttribute =>
          'Utiliser l\'attribut de réinitialisation',
        ldapVersion                => 'Version',
        localSessionStorage        => 'Module de cache',
        localSessionStorageOptions => 'Paramètres du module de cache',
        loginHistory               => 'Historique des connexions',
        loginHistoryEnabled        => 'Activation',
        logoutServices             => 'Transfert de la déconnexion',
        logParams                  => 'Journalisation',
        macros                     => 'Macros',
        mailBody                   => 'Contenu du message de succès',
        mailCharset                => 'Charset',
        mailConfirmBody            => 'Contenu du message de confirmation',
        mailConfirmSubject         => 'Sujet du message de confirmation',
        mailContent                => 'Contenu du mail',
        mailFrom                   => 'Expéditeur du message',
        mailHeaders                => 'En-têtes du mail',
        mailLDAPFilter             => 'Filtre mail',
        mailOnPasswordChange =>
          "Envoi d'un mail quand le mot de passe est changé",
        mailOther      => 'Autres',
        mailReplyTo    => 'Adresse de réponse',
        mailSessionKey => 'Clé de session contenant l\'adresse email',
        mailSubject    => 'Sujet du message de succès',
        mailTimeout => "Durée de validité d'une demande de réinitialisation",
        mailUrl     => 'URL de la page',
        maintenance => 'Mode maintenance',
        managerDn   => 'Compte de connexion LDAP',
        managerPassword     => 'Mot de passe LDAP',
        memberOfSSOGroups   => 'Membre des groupes SSO',
        modulesTitle        => 'Modules utilisés',
        multipleSessions    => 'Sessions multiples',
        notification        => 'Activation',
        notifications       => 'Notifications',
        notificationCreated => "La notification a été créée",
        notificationDeleted =>
          'La notification a été marquée comme validée',
        notificationDone       => 'notification validée',
        notificationsDone      => 'notifications validées',
        notificationNotCreated => "La notification n'a pas été créée",
        notificationNotDeleted => "La notification n'a pas été validée",
        notificationNotFound   => "La notification n'a pas été trouvée",
        notificationNotPurged =>
          "La notification n'a pas été définitivement supprimée",
        notificationPurged =>
          'La notification a été définitivement supprimée',
        notificationStorage         => 'Module de stockage',
        notificationStorageOptions  => 'Paramètres du module de stockage',
        notificationWildcard        => 'Identifiant pour tous les utilisateurs',
        notificationXSLTfile        => 'Fichier XSLT personnalisé',
        notifyDeleted               => 'Affiche les sessions effacées',
        notifyOther                 => 'Affiche les autres sessions',
        nullAuthnLevel              => 'Niveau d\'authentification',
        nullParams                  => 'Paramètres Null',
        openIdAttr                  => 'Identifiant OpenID',
        openIdAuthnLevel            => 'Niveau d\'authentification',
        openIdExportedVars          => 'Variables exportées',
        openIdIDPList               => 'Domaines autorisés',
        openIdIssuerSecret          => 'Jeton secret',
        openIdParams                => 'Paramètres OpenID',
        openIdSecret                => 'Jeton secret',
        openIdSreg                  => 'Associations SREG',
        openIdSreg_fullname         => 'Nom complet',
        openIdSreg_nickname         => 'Surnom',
        openIdSreg_language         => 'Langage',
        openIdSreg_postcode         => 'Code postal',
        openIdSreg_timezone         => 'Zone horaire',
        openIdSreg_country          => 'Pays',
        openIdSreg_gender           => 'Genre',
        openIdSreg_email            => 'Email',
        openIdSreg_dob              => 'Date de naissance',
        openIdSPList                => 'Domaines autorisés',
        passwordDB                  => 'Module de mot de passe',
        passwordManagement          => 'Gestion des mots de passe',
        persistentSessions          => 'Sessions persistantes',
        persistentStorage           => 'Module Apache::Session',
        persistentStorageOptions    => 'Paramètres du module Apache::Session',
        port                        => 'Port',
        portal                      => 'URL',
        portalAntiFrame             => 'Protection anti frame',
        portalAutocomplete          => 'Auto complétion',
        portalButtons               => 'Boutons sur la page de connexion',
        portalCaptcha               => 'Captcha',
        portalCheckLogins           => 'Vérifier l\'historique',
        portalCustomization         => 'Personnalisation',
        portalDisplayAppslist       => 'Liste des applications',
        portalDisplayChangePassword => 'Changement de mot de passe',
        portalDisplayLoginHistory   => 'Historique des connexions',
        portalDisplayLogout         => 'Déconnexion',
        portalDisplayRegister       => 'Création d\'un nouveau compte',
        portalDisplayResetPassword  => 'Réinitialisation de mot de passe',
        portalForceAuthn            => 'Authentication forcée',
        portalMenu                  => 'Menu',
        portalModules               => 'Modules',
        portalOpenLinkInNewWindow   => 'Nouvelle fenêtre',
        portalOther                 => 'Autres',
        portalParams                => 'Portail',
        portalPingInterval          => 'Interval du ping',
        portalRedirection           => 'Redirections du portail',
        portalRequireOldPassword    => 'Ancien mot de passe requis',
        portalSkin                  => 'Thème visuel par défaut',
        portalSkinRules             => "Règles d'affichage du thème visuel",
        portalUserAttr              => "Attribut de l'utilisateur",
        post                        => 'Rejeu de formulaires',
        proxyParams                 => 'Paramètres Proxy',
        purgeNotification => 'Supprimer définitivement la notification',
        radiusAuthnLevel  => "Niveau d'authentification",
        radiusParams      => 'Paramètres Radius',
        radiusSecret      => 'Secret partagé',
        radiusServer      => "Nom d'hôte du serveur",
        randomPasswordRegexp =>
          'Expression regulière pour la génération des mots de passe',
        redirection                 => 'Redirections du Handler',
        register                    => 'Créer un nouveau compte',
        registerConfirmSubject      => 'Sujet du mail de confirmation',
        registerDB                  => 'Module',
        registerDoneSubject         => 'Sujet du mail de prise en compte',
        registerTimeout             => 'Durée de validité de la requête',
        registerUrl                 => 'URL de la page',
        reloadUrls                  => 'Mise à jour de la configuration',
        remoteCookieName            => 'Nom du cookie',
        remoteGlobalStorage         => 'Module des sessions',
        remoteGlobalStorageOptions  => 'Options du module des sessions',
        remoteParams                => 'Paramètres Remote',
        remotePortal                => 'URL du portail',
        rules                       => 'Règles',
        securedCookie               => 'Cookie sécurisé (SSL)',
        secureTokenAllowOnError     => 'Autoriser les requêtes en erreur',
        secureTokenAttribute        => 'Attribut à stocker',
        secureTokenExpiration       => 'Expiration du jeton',
        secureTokenHandler          => 'Jeton sécurisé',
        secureTokenHeader           => "Nom de l'en-tête HTTP",
        secureTokenMemcachedServers => 'Serveurs Memcached',
        secureTokenUrls             => 'URLs protégées',
        security                    => 'Sécurité',
        session                     => 'session',
        sessions                    => 'sessions',
        sessionDataToRemember       => 'Données de session à conserver',
        sessionDeleted              => 'La session a été supprimée',
        sessionParams               => 'Sessions',
        sessionStartedAt            => 'Session démarrée le ',
        sessionStorage              => 'Stockage des sessions',
        sessionTitle                => 'Contenu de la session',
        singleIP           => 'Une seule session par couple utilisateur/IP',
        singleSession      => 'Une seule session par utilisateur',
        singleUserByIP     => 'Un seul utilisateur par IP',
        slaveAuthnLevel    => 'Niveau d\'authentification',
        slaveExportedVars  => 'Variables exportées',
        slaveMasterIP      => 'IP accréditées',
        slaveParams        => 'Paramètres Slave',
        slaveUserHeader    => "En-tête identifiant l'utilisateur",
        SMTPAuthPass       => 'Mot de passe SMTP',
        SMTPAuthUser       => 'Utilisateur SMTP',
        SMTPServer         => 'Serveur SMTP',
        soap               => 'SOAP',
        Soap               => 'Activation',
        soapAuthService    => 'URL du portail',
        soapSessionService => 'Point d\'accès SOAP des sessions',
        specialHandlers    => 'Handlers spéciaux',
        SSLAuthnLevel      => 'Niveau d\'authentification',
        sslParams          => 'Paramètres SSL',
        SSLVar             => 'Champ extrait du certificat',
        startTime          => 'Date de création',
        storePassword => "Stocke le mot de passe de l'utilisateur en session",
        successLoginNumber => 'Nombre de connexions mémorisées',
        sympaHandler       => 'Sympa',
        sympaMailKey       => 'Clé de session pour le mail',
        sympaSecret        => 'Secret partagé',
        syntaxError        => 'Erreur de syntaxe',
        syslog             => 'Facilité syslog',
        timeout            => 'Durée de vie maximale des sessions',
        timeoutActivity    => 'Délai d\'expiration des sessions',
        trustedDomains     => 'Domaines approuvés',
        trustedProxies     => 'IP des proxys de confiance',
        twitterAppName     => 'Nom de l\'application',
        twitterAuthnLevel  => 'Niveau d\'authentification',
        twitterKey         => 'Clé de l\'API',
        twitterParams      => 'Paramètres Twitter',
        twitterSecret      => 'Secret de l\'API',
        unknownError       => 'Erreur inconnue',
        updateTime         => 'Date de mise à jour',
        uploadDenied       => 'Téléchargement refusé',
        user               => 'utilisateur',
        users              => 'utilisateurs',
        userDB             => "Module d'utilisateurs",
        userControl        => "Contrôle du nom d'utilisateur",
        userPivot => 'Champ identifiant dans la table des utilisateurs',
        useRedirectOnError     => 'Redirection pour les erreurs',
        useRedirectOnForbidden => 'Redirection pour les accès interdits',
        useSafeJail            => 'Utiliser la cage Safe',
        variables              => "Variables",
        vhostAliases           => 'Alias',
        vhostHttps             => 'HTTPS',
        vhostMaintenance       => 'Mode maintenance',
        vhostOptions           => 'Options',
        vhostPort              => 'Port',
        virtualHosts           => 'Hôtes virtuels',
        warning                => 'Attention',
        webIDAuthnLevel        => 'Niveau d\'authentification',
        webIDExportedVars      => 'Variables exportées',
        webIDParams            => 'Paramètres WebID',
        webIDWhitelist         => 'Liste blanche WebID',
        whatToTrace            => "REMOTE_USER",
        yubikeyAuthnLevel      => "Niveau d'authentification",
        yubikeyClientID        => "Identifiant client de l'API",
        yubikeyParams          => "Paramètres Yubikey",
        yubikeyPublicIDSize    => "Taille de la partie publique de l'OTP",
        yubikeySecretKey       => "Clé secrète de l'API",
        zimbraAccountKey       => 'Clé de session pour le compte',
        zimbraBy               => 'Type de compte',
        zimbraHandler          => 'Zimbra',
        zimbraPreAuthKey       => 'Clé de préauthentication',
        zimbraSsoUrl           => 'Motif pour l\'URL de SSO locale ',
        zimbraUrl              => 'URL de préauthentification',

        saml                               => 'SAML',
        samlNameIDFormatMap                => 'Formats de NameID',
        samlNameIDFormatMapEmail           => 'Email',
        samlNameIDFormatMapX509            => 'X509',
        samlNameIDFormatMapWindows         => 'Windows',
        samlNameIDFormatMapKerberos        => 'Kerberos',
        samlIDPMetaDataNode                => 'Fournisseurs d\'identité SAML',
        samlIDPMetaDataXML                 => 'Metadonnées',
        samlIDPMetaDataExportedAttributes  => 'Attributs exportés',
        samlIDPMetaDataOptions             => 'Options',
        samlIDPMetaDataOptionsNameIDFormat => 'Format du NameID',
        samlIDPMetaDataOptionsForceAuthn   => 'Authentification forcée',
        samlIDPMetaDataOptionsIsPassive    => 'Authentication passive',
        samlIDPMetaDataOptionsAllowProxiedAuthn =>
          'Authentification proxy autorisée',
        samlIDPMetaDataOptionsAllowLoginFromIDP =>
          'Authentification depuis le fournisseur autorisée',
        samlIDPMetaDataOptionsAdaptSessionUtime =>
          'Adapatation de la durée de vie de la session',
        samlIDPMetaDataOptionsSignSSOMessage => 'Signature des messages SSO',
        samlIDPMetaDataOptionsCheckSSOMessageSignature =>
          'Vérification de la signature des messages SSO',
        samlIDPMetaDataOptionsSignSLOMessage => 'Signature des messages SLO',
        samlIDPMetaDataOptionsCheckSLOMessageSignature =>
          'Vérification de la signature des messages SLO',
        samlIDPMetaDataOptionsSSOBinding     => 'Méthode SSO',
        samlIDPMetaDataOptionsSLOBinding     => 'Méthode SLO',
        samlIDPMetaDataOptionsResolutionRule => 'Règle de résolution',
        samlIDPMetaDataOptionsRequestedAuthnContext =>
          'Contexte d\'authentification demandé',
        samlIDPMetaDataOptionsForceUTF8       => 'Forcer l\'UTF-8',
        samlIDPMetaDataOptionsEncryptionMode  => 'Mode de chiffrement',
        samlIDPMetaDataOptionsCheckConditions => 'Vérifier les conditions',
        samlIDPMetaDataOptionsAuthnRequest    => 'Requête d\'authentification',
        samlIDPMetaDataOptionsSession         => 'Session',
        samlIDPMetaDataOptionsSignature       => 'Signature',
        samlIDPMetaDataOptionsBinding         => 'Méthode',
        samlIDPMetaDataOptionsSecurity        => 'Sécurité',
        samlSPMetaDataNode                    => 'Fournisseurs de service SAML',
        samlSPMetaDataXML                     => 'Metadonnées',
        samlSPMetaDataExportedAttributes      => 'Attributs exportés',
        samlSPMetaDataOptions                 => 'Options',
        samlSPMetaDataOptionsNameIDFormat     => 'Format par défaut du NameID',
        samlSPMetaDataOptionsOneTimeUse       => 'Utilisation unique',
        samlSPMetaDataOptionsSignSSOMessage   => 'Signature des messages SSO',
        samlSPMetaDataOptionsCheckSSOMessageSignature =>
          'Vérification de la signature des messages SSO',
        samlSPMetaDataOptionsSignSLOMessage => 'Signature des messages SLO',
        samlSPMetaDataOptionsCheckSLOMessageSignature =>
          'Vérification de la signature des messages SLO',
        samlSPMetaDataOptionsEncryptionMode => 'Mode de chiffrement',
        samlSPMetaDataOptionsAuthnResponse  => 'Réponse d\'authentification',
        samlSPMetaDataOptionsSignature      => 'Signature',
        samlSPMetaDataOptionsSecurity       => 'Sécurité',
        samlSPMetaDataOptionsEnableIDPInitiatedURL =>
          "Autoriser l'utilisation d'URL SSO initié par l'IDP",
        samlSPMetaDataOptionsNameIDSessionKey =>
          "Forcer la clé de session NameID",
        samlSPMetaDataOptionsSessionNotOnOrAfterTimeout =>
          'Durée sessionNotOnOrAfter',
        samlSPMetaDataOptionsNotOnOrAfterTimeout => 'Durée notOnOrAfter',
        samlServiceMetaData                      => 'Service SAML 2',
        samlEntityID                             => 'Identifiant d\'entité',
        samlOrganization                         => 'Organisation',
        samlOrganizationDisplayName              => 'Nom affiché',
        samlOrganizationName                     => 'Nom',
        samlOrganizationURL                      => 'URL',
        samlSPSSODescriptor                      => 'Fournisseur de service',
        samlSPSSODescriptorAuthnRequestsSigned =>
          'Requêtes d\'authentification signées',
        samlSPSSODescriptorWantAssertionsSigned =>
          'Exige des assertions signées',
        samlSPSSODescriptorSingleLogoutService => 'Single Logout',
        samlSPSSODescriptorSingleLogoutServiceHTTPRedirect =>
          'Redirection HTTP',
        samlSPSSODescriptorSingleLogoutServiceHTTPPost => 'POST HTTP',
        samlSPSSODescriptorSingleLogoutServiceSOAP     => 'SOAP',
        samlSPSSODescriptorAssertionConsumerService    => 'Assertions',
        samlSPSSODescriptorAssertionConsumerServiceHTTPArtifact =>
          'HTTP Artifact',
        samlSPSSODescriptorAssertionConsumerServiceHTTPPost => 'POST HTTP',
        samlSPSSODescriptorArtifactResolutionService =>
          'Résolution d\'Artifact',
        samlSPSSODescriptorArtifactResolutionServiceArtifact =>
          'Service Artifact',
        samlIDPSSODescriptor => 'Fournisseur d\'identité',
        samlIDPSSODescriptorWantAuthnRequestsSigned =>
          'Exige des requêtes d\'authentification signées',
        samlIDPSSODescriptorSingleSignOnService => 'Single Sign On',
        samlIDPSSODescriptorSingleSignOnServiceHTTPRedirect =>
          'Redirection HTTP',
        samlIDPSSODescriptorSingleSignOnServiceHTTPPost     => 'POST HTTP',
        samlIDPSSODescriptorSingleSignOnServiceHTTPArtifact => 'HTTP Artifact',
        samlIDPSSODescriptorSingleSignOnServiceSOAP         => 'SOAP',
        samlIDPSSODescriptorSingleLogoutService             => 'Single Logout',
        samlIDPSSODescriptorSingleLogoutServiceHTTPRedirect =>
          'Redirection HTTP',
        samlIDPSSODescriptorSingleLogoutServiceHTTPPost => 'POST HTTP',
        samlIDPSSODescriptorSingleLogoutServiceSOAP     => 'SOAP',
        samlIDPSSODescriptorArtifactResolutionService =>
          'Résolution d\'Artifact',
        samlIDPSSODescriptorArtifactResolutionServiceArtifact =>
          'Service Artifact',
        samlAttributeAuthorityDescriptor => 'Autorité d\'attributs',
        samlAttributeAuthorityDescriptorAttributeService =>
          'Service d\'attributs',
        samlAttributeAuthorityDescriptorAttributeServiceSOAP => 'SOAP',
        samlServiceSecurity         => 'Paramètres de sécurité',
        samlServiceSecuritySig      => 'Signature',
        samlServiceSecurityEnc      => 'Chiffrement',
        samlServicePrivateKeySig    => 'Clé privée',
        samlServicePrivateKeySigPwd => 'Mot de passe de la clé privée',
        samlServicePublicKeySig     => 'Clé publique',
        samlServicePrivateKeyEnc    => 'Clé privée',
        samlServicePrivateKeyEncPwd => 'Mot de passe de la clé privée',
        samlServicePublicKeyEnc     => 'Clé publique',
        samlAdvanced                => 'Avancé',
        samlIdPResolveCookie        => 'Nom du cookie de résolution IDP',
        samlMetadataForceUTF8       => 'Conversion des métadonnées en UTF8',
        samlStorage                 => 'Nom du module des session SAML',
        samlStorageOptions          => 'Options du module des sessions SAML',
        samlAuthnContextMap         => 'Contextes d\'authentification',
        samlAuthnContextMapPassword => 'Mot de passe',
        samlAuthnContextMapPasswordProtectedTransport =>
          'Mot de passe protégé',
        samlAuthnContextMapTLSClient     => 'Client TLS',
        samlAuthnContextMapKerberos      => 'Kerberos',
        samlCommonDomainCookie           => 'Cookie de Domaine Commun',
        samlCommonDomainCookieActivation => 'Activation',
        samlCommonDomainCookieDomain     => 'Domaine commun',
        samlCommonDomainCookieReader     => 'URL de lecture',
        samlCommonDomainCookieWriter     => 'URL d\'écriture',
        samlRelayStateTimeout => 'Durée de vie d\'une session RelayState',
        samlUseQueryStringSpecific =>
          "Utilisation d'une fonction spécifique pour query_string",
    };
}

